"""Shear Bearing Graphs"""

# 1.13
curve_132 = [2, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.2], [1.4, 1.4], [1.6, 1.6], [1.8, 1.75], [2, 1.9], [2.2, 2], [2.4, 2.1]]
curve_133 = [3, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.2], [1.4, 1.4], [1.6, 1.6], [1.8, 1.75], [2, 1.9], [2.2, 2], [2.4, 2.1]]
curve_134 = [4, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.2], [1.4, 1.4], [1.6, 1.6], [1.8, 1.75], [2, 1.9], [2.2, 1.9], [2.4, 2.0]]
curve_135 = [5, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.2], [1.4, 1.4], [1.6, 1.6], [1.8, 1.7], [2, 1.8], [2.2, 1.85], [2.4, 1.9]]
curve_136 = [6, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.2], [1.4, 1.4], [1.6, 1.5], [1.8, 1.6], [2, 1.7], [2.2, 1.75], [2.4, 1.8]]
curve_137 = [7, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.2], [1.4, 1.3], [1.6, 1.45], [1.8, 1.5], [2, 1.6], [2.2, 1.65], [2.4, 1.65]]
curve_138 = [8, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.1], [1.4, 1.21], [1.6, 1.3], [1.8, 1.35], [2, 1.4], [2.2, 1.45], [2.4, 1.45]]
curve_139 = [9, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1.1], [1.4, 1.19], [1.6, 1.2], [1.8, 1.25], [2, 1.3], [2.2, 1.35], [2.4, 1.35]]
curve_1310 = [10, [0.5, 0], [0.6, 0.2], [0.7, 0.4], [0.8, 0.55], [0.9, 0.7], [1, 0.8], [1.2, 1], [1.4, 1.1], [1.6, 1.18], [1.8, 1.22], [2, 1.25], [2.2, 1.25], [2.4, 1.3]]
curve_1315 = [15, [0.5, 0], [0.6, 0.2], [0.7, 0.35], [0.8, 0.4], [0.9, 0.45], [1, 0.47], [1.2, 0.7], [1.4, 75], [1.6, 0.77], [1.8, 0.8], [2, 0.8], [2.2, 0.8], [2.4, 0.8]]
curve_1320 = [20, [0.5, 0], [0.6, 0.15], [0.7, 0.2], [0.8, 0.3], [0.9, 0.35], [1, 0.4], [1.2, 5], [1.4, 0.55], [1.6, 0.57], [1.8, 0.6], [2, 0.6], [2.2, 0.6], [2.4, 0.6]]
curve_1325 = [25, [0.5, 0], [0.6, 0.1], [0.7, 0.15], [0.8, 0.2], [0.9, 0.25], [1, 0.3], [1.2, 0.4], [1.4, 0.4], [1.6, 0.45], [1.8, 0.45], [2, 0.45], [2.2, 0.45], [2.4, 0.45]]
curve_1330 = [30, [0.5, 0], [0.6, 0.05], [0.7, 0.1], [0.8, 0.18], [0.9, 0.2], [1, 0.25], [1.2, 0.3], [1.4, 0.3], [1.6, 0.3], [1.8, 0.35], [2, 0.35], [2.2, 0.4], [2.4, 0.4]]

graph_13 = [curve_132, curve_133, curve_134, curve_135, curve_136, curve_137, curve_138, curve_139, curve_1310, curve_1315, curve_1320, curve_1325, curve_1330]
# 1.14
curve_14060 = [0.6, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 1.28], [1.5, 1.38], [1.75, 1.5], [2, 1.6], [2.25, 1.65], [2.5, 1.69], [2.75, 1.7], [3, 1.725], [3.25, 1.75],
               [3.5, 1.75], [3.75, 1.75], [4, 1.75]]
curve_14040 = [0.4, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 1.28], [1.5, 1.38], [1.75, 1.5], [2, 1.55], [2.25, 1.6], [2.5, 1.65], [2.75, 1.67], [3, 1.68], [3.25, 1.7],
               [3.5, 1.7], [3.75, 1.7], [4, 1.7]]
curve_14030 = [0.3, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 1.28], [1.5, 1.35], [1.75, 1.45], [2, 1.5], [2.25, 1.55], [2.5, 1.6], [2.75, 1.6], [3, 1.625], [3.25, 1.625],
               [3.5, 1.625], [3.75, 1.625], [4, 1.625]]
curve_14020 = [0.2, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 1.15], [1.5, 1.28], [1.75, 1.35], [2, 1.41], [2.25, 1.45], [2.5, 1.475], [2.75, 1.48], [3, 1.5], [3.25, 1.5],
               [3.5, 1.5], [3.75, 1.5], [4, 1.5]]
curve_14015 = [0.15, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 1.1], [1.5, 1.2], [1.75, 1.28], [2, 1.3], [2.25, 1.325], [2.5, 1.35], [2.75, 1.375], [3, 1.4], [3.25, 1.4],
               [3.5, 1.4], [3.75, 1.4], [4, 1.4]]
curve_14012 = [0.12, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 1.025], [1.5, 1.125], [1.75, 1.2], [2, 1.225], [2.25, 1.25], [2.5, 1.275], [2.75, 1.28], [3, 1.3], [3.25, 1.3],
               [3.5, 1.3], [3.75, 1.3], [4, 1.3]]
curve_14010 = [0.1, [0.5, 0], [0.75, 0.5], [1, 0.875], [1.25, 0.98], [1.5, 1.08], [1.75, 1.15], [2, 1.18], [2.25, 1.2], [2.5, 1.21], [2.75, 1.23], [3, 1.25], [3.25, 1.25],
               [3.5, 1.25], [3.75, 1.25], [4, 1.25]]
curve_14008 = [0.08, [0.5, 0], [0.75, 0.5], [1, ], [1.25, 0.9], [1.5, 1], [1.75, 1.05], [2, 1.05], [2.25, 1.1], [2.5, 1.1], [2.75, 1.12], [3, 1.13], [3.25, 1.13], [3.5, 1.13],
               [3.75, 1.13], [4, 1.13]]
curve_14006 = [0.06, [0.5, 0], [0.75, 0.5], [1, ], [1.25, 0.8], [1.5, 0.875], [1.75, 0.9], [2, 0.95], [2.25, ], [2.5], [2.75, 0.8], [3, 1], [3.25, 1], [3.5, 1], [3.75, 1], [4, 1]]

graph_14 = [curve_14060, curve_14040, curve_14030, curve_14020, curve_14015, curve_14012, curve_14010, curve_14008, curve_14006]


def shear_bearing_graph(fig, d_over_t, x_input):
    range_0 = True
    graph_picked = None
    y_input = 0
    if fig == 13:
        graph_picked = graph_13
        y_input = d_over_t
        if y_input > 30:
            range_0 = False

    elif fig == 14:
        graph_picked = graph_14
        y_input = d_over_t ** -1
        if y_input < 0.06:
            range_0 = False

    if range_0:
        p_min = 100
        n = None
        if graph_picked is not None:
            for j in graph_picked:
                p = abs(float(j[0]) - y_input)
                if p < p_min:
                    p_min = p
                    n = graph_picked.index(j)

            if n is not None:
                curve_picked = graph_picked[n]

                for i in curve_picked[1:]:

                    if i[0] <= x_input <= curve_picked[curve_picked.index(i) + 1][0]:
                        x1 = i[0]
                        x2 = curve_picked[curve_picked.index(i) + 1][0]

                        y1 = i[1]
                        y2 = curve_picked[curve_picked.index(i) + 1][1]

                        k = (x_input - x1) / (x2 - x1)

                        output = (1 - k) * y1 + k * y2

                        return output

    else:
        print("WARNING: RANGE OF VALIDITY EXCEEDED")


# Valid for 0 <= d_over_t <= 16.5
print(shear_bearing_graph(13, 10, 2))
print(shear_bearing_graph(14, 10, 2))
